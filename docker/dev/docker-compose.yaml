services:
  server-nginx:
    image: nginx:alpine
    container_name: server-nginx
    ports:
      - "80:80"
    volumes:
      - "./server-entrypoint/nginx-ngrok.conf:/etc/nginx/nginx.conf:ro"
      - "./server-entrypoint/proxy_params:/etc/nginx/proxy_params:ro"
    depends_on:
      - backend-api-forum
      - backend-api-instructor
      - backend-api-public1
      - backend-api-public2
      - backend-api-student
      - backend-api-user
      - frontend-forum
      - frontend-instructor
      - frontend-public
      - frontend-student
      - frontend-user
    networks:
      - iamra_net

  backend-api-instructor:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/instructor/Dockerfile.api-instructor
    container_name: backend-api-instructor
    volumes:
      - "../../backend-api-instructor:/app"
    depends_on:
      database-mysql:
        condition: service_healthy
      database-redis:
        condition: service_started
      database-mongo:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-instructor/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-public1:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/public/Dockerfile.api-public
    container_name: backend-api-public1
    volumes:
      - "../../backend-api-public:/app"
    depends_on:
      database-mysql:
        condition: service_healthy
      database-redis:
        condition: service_started
      database-mongo:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-public/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-public2:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/public/Dockerfile.api-public
    container_name: backend-api-public2
    volumes:
      - "../../backend-api-public:/app"
    depends_on:
      database-mysql:
        condition: service_healthy
      database-redis:
        condition: service_started
      database-mongo:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-public/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-student:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/student/Dockerfile.api-student
    container_name: backend-api-student
    volumes:
      - "../../backend-api-student:/app"
    depends_on:
      database-mysql:
        condition: service_healthy
      database-redis:
        condition: service_started
      database-mongo:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-student/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-user:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/user/Dockerfile.api-user
    container_name: backend-api-user
    volumes:
      - "../../backend-api-user:/app"
    depends_on:
      database-mysql:
        condition: service_healthy
      database-redis:
        condition: service_started
      database-mongo:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-user/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-user-reverb:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/user/Dockerfile.api-user-reverb
    container_name: backend-api-user-reverb
    volumes:
      - "../../backend-api-user:/app"
    depends_on:
      database-redis:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-user/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  backend-api-user-queue:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/user/Dockerfile.api-user-queue
    container_name: backend-api-user-queue
    volumes:
      - "../../backend-api-user:/app"
    ports:
      - "9595:80"
    depends_on:
      - backend-api-user
      - database-redis
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-user/.env"
    networks:
      - iamra_net
    mem_limit: 256m
    cpus: 0.25
    healthcheck:
      test: [ "NONE" ]

  backend-api-forum:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/forum/Dockerfile.api-forum
    container_name: backend-api-forum
    volumes:
      - "../../backend-api-forum:/app"
    depends_on:
      - backend-api-user
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-forum/.env"
    networks:
      - iamra_net
    ports:
      - "9000:6001"
    mem_limit: 512m
    cpus: 0.25

  backend-api-forum-reverb:
    build:
      context: ../../
      dockerfile: docker/dev/backend-laravel/forum/Dockerfile.api-forum-reverb
    container_name: backend-api-forum-reverb
    volumes:
      - "../../backend-api-forum:/app"
    depends_on:
      database-redis:
        condition: service_started
    env_file:
      - "backend-laravel/_shared/.env.shared"
      - "../../backend-api-forum/.env"
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  frontend-user:
    build:
      context: ../../
      dockerfile: docker/dev/frontend-react/Dockerfile
    container_name: frontend-user
    volumes:
      - "../../frontend-user:/app"
      - "./frontend-react/.env.shared:/app/.env"
    environment:
      - VITE_CLIENT_GOOGLE=501957692849-nprqfdeclrvjseadfs3bpru3arci95eg.apps.googleusercontent.com
      - VITE_API_KEY_OPEN_CAGE_DATA=1c364950870b42049cebeb19d1669abe
    depends_on:
      - backend-api-user
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  frontend-instructor:
    build:
      context: ../../
      dockerfile: docker/dev/frontend-react/Dockerfile
    container_name: frontend-instructor
    volumes:
      - "../../frontend-instructor:/app"
      - "./frontend-react/.env.shared:/app/.env"
    depends_on:
      - backend-api-instructor
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  frontend-student:
    build:
      context: ../../
      dockerfile: docker/dev/frontend-react/Dockerfile
    container_name: frontend-student
    volumes:
      - "../../frontend-student:/app"
      - "./frontend-react/.env.shared:/app/.env"
    depends_on:
      - backend-api-student
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  frontend-public:
    build:
      context: ../../
      dockerfile: docker/dev/frontend-react/Dockerfile
    container_name: frontend-public
    volumes:
      - "../../frontend-public:/app"
      - "./frontend-react/.env.shared:/app/.env"
    depends_on:
      - backend-api-public1
      - backend-api-public2
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  frontend-forum:
    build:
      context: ../../
      dockerfile: docker/dev/frontend-react/Dockerfile
    container_name: frontend-forum
    volumes:
      - "../../frontend-forum:/app"
      - "./frontend-react/.env.shared:/app/.env"
    depends_on:
      - backend-api-forum
    networks:
      - iamra_net
    mem_limit: 512m
    cpus: 0.25

  database-mongo:
    image: mongo:latest
    container_name: database-mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - iamra_net
    mem_limit: 256m
    cpus: 0.25

  database-redis:
    image: redis:latest
    container_name: database-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - iamra_net
    mem_limit: 128m
    cpus: 0.10

  database-mysql:
    image: mysql:latest
    container_name: database-mysql
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: iamra_course
    ports:
      - "3307:3306"
    networks:
      - iamra_net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      retries: 5
      timeout: 5s

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    depends_on:
      - server-nginx
    environment:
      NGROK_AUTHTOKEN: "2a0uiHZxc8OP2aVKaOn7dUlhG2f_5Fj1qNovroHTHhLxHR5mM"
    command: "http server-nginx:80"
    networks:
      - iamra_net
    ports:
      - "9123:4040"

  set-prometheus:
    image: prom/prometheus:latest
    container_name: set-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "../../set-prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    networks:
      - iamra_net

  set-grafana:
    image: grafana/grafana:latest
    container_name: set-grafana
    ports:
      - "4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - "../../set-grafana/provisioning:/etc/grafana/provisioning"
      - "../../set-grafana/dashboards:/var/lib/grafana/dashboards"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - iamra_net
    depends_on:
      - set-prometheus

  set-k6:
    image: grafana/k6:latest
    container_name: set-k6
    volumes:
      - "../../set-k6:/k6-scripts"
      - "../../set-k6/results:/shared"
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://set-prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=false
      - K6_PROMETHEUS_RW_STALE_MARKERS=true
    networks:
      - iamra_net
    depends_on:
      - server-nginx
      - set-prometheus
    profiles:
      - testing

  set-node-exporter:
    image: prom/node-exporter:latest
    container_name: set-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - iamra_net

volumes:
  mysql_data:
    name: mysql_data
  mongo_data:
    name: mongo_data
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data

networks:
  iamra_net:
    name: iamra_net
    driver: bridge

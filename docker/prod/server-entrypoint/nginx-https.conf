worker_processes 1;
worker_rlimit_nofile 2048;
worker_cpu_affinity auto;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
    accept_mutex off;
}
ntar atur socket
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enable HTTP/2 globally
    http2 on;

    # Logging optimized for AWS
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Reduce I/O for free tier
    access_log /var/log/nginx/access.log main buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Performance optimization for AWS Free Tier (t2.micro/t3.micro)
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;

    # Memory optimization
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # Timeouts optimized for free tier
    client_body_timeout 35s;
    client_header_timeout 35s;
    send_timeout 35s;
    resolver_timeout 15s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # SSL Settings optimized for performance
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Gzip compression optimized
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 4;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Rate Limiting for AWS Free Tier
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Hide nginx version
    server_tokens off;

    # Backend upstreams with health checks
    upstream backend_api_forum {
        least_conn;
        server backend-api-forum max_fails=3 fail_timeout=30s weight=1;
        keepalive 8;
    }

    upstream backend_api_instructor {
        least_conn;
        server backend-api-instructor max_fails=3 fail_timeout=30s weight=1;
        keepalive 8;
    }

    upstream backend_api_student {
        least_conn;
        server backend-api-student max_fails=3 fail_timeout=30s weight=1;
        keepalive 8;
    }

    upstream backend_api_public {
        least_conn;
        server backend-api-public max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream backend_api_user {
        least_conn;
        server backend-api-user max_fails=3 fail_timeout=30s weight=1;
        keepalive 8;
    }

    # WebSocket upgrade headers
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Cache configuration optimized for free tier
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:30m max_size=200m inactive=24h use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=50m inactive=1h use_temp_path=off;

    # HTTP server for Let's Encrypt and redirects
    server {
        listen 80;
        server_name course.iamra.site
                    forum.course.iamra.site
                    user.course.iamra.site
                    student.course.iamra.site
                    instructor.course.iamra.site
                    api-public.course.iamra.site
                    api-forum.course.iamra.site
                    api-user.course.iamra.site
                    api-student.course.iamra.site
                    api-instructor.course.iamra.site;

        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
        }

        # Redirect to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # ========================================
    # BACKEND API SUBDOMAINS (HTTPS)
    # ========================================

    # api-forum.course.iamra.site
    server {
        listen 443 ssl;
        server_name api-forum.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # WebSocket support
        location /v1/wss/notif {
            proxy_pass http://backend-api-forum-reverb:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_connect_timeout 5s;
        }

        # API routes
        location / {
            proxy_pass http://backend_api_forum;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 35s;
            proxy_read_timeout 35s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
    }

    # api-instructor.course.iamra.site
    server {
        listen 443 ssl;
        server_name api-instructor.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        location / {
            proxy_pass http://backend_api_instructor;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 35s;
            proxy_read_timeout 35s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
    }

    # api-student.course.iamra.site
    server {
        listen 443 ssl;
        server_name api-student.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        location / {
            proxy_pass http://backend_api_student;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 35s;
            proxy_read_timeout 35s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
    }

    # api-public.course.iamra.site (with enhanced caching)
    server {
        listen 443 ssl;
        server_name api-public.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        limit_req zone=api burst=50 nodelay;
        limit_conn conn_limit_per_ip 50;

        location / {
            proxy_pass http://backend_api_public;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 35s;
            proxy_read_timeout 35s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
    }

    # api-user.course.iamra.site
    server {
        listen 443 ssl;
        server_name api-user.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # WebSocket support
        location /v1/wss/notif {
            proxy_pass http://backend-api-user-reverb:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_connect_timeout 5s;
        }

        # TAMBAHKAN INI - Horizon Dashboard
        location /v1/horizon {
            proxy_pass http://backend_api_user/v1/horizon;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
        }

        # All other API endpoints
        location / {
            proxy_pass http://backend_api_user;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 15s;
            proxy_send_timeout 35s;
            proxy_read_timeout 35s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }
    }

    # ========================================
    # FRONTEND SUBDOMAINS (Static Files)
    # ========================================

    # forum.course.iamra.site
    server {
        listen 443 ssl;
        server_name forum.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        root /var/www/html/forum;
        index index.html;

        # Security
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Static assets with enhanced caching
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            gzip_static on;

            # Use static cache
            proxy_cache static_cache;
            proxy_cache_valid 200 1d;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            gzip_static on;
        }

        # HTML files (no cache for SPA)
        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # user.course.iamra.site
    server {
        listen 443 ssl;
        server_name user.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        root /var/www/html/user;
        index index.html;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            gzip_static on;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            gzip_static on;
        }

        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # instructor.course.iamra.site
    server {
        listen 443 ssl;
        server_name instructor.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        root /var/www/html/instructor;
        index index.html;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            gzip_static on;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            gzip_static on;
        }

        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # student.course.iamra.site
    server {
        listen 443 ssl;
        server_name student.course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        root /var/www/html/student;
        index index.html;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            gzip_static on;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            gzip_static on;
        }

        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # course.iamra.site
    server {
        listen 443 ssl;
        server_name course.iamra.site;

        ssl_certificate /etc/letsencrypt/live/course.iamra.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/course.iamra.site/privkey.pem;

        root /var/www/html/public;
        index index.html;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            gzip_static on;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            gzip_static on;
        }

        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
}